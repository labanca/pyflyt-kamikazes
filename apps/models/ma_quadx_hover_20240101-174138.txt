Result: Stills slows and with no apparently chasing. They move near the targets but no collide and stops when near.
train_desc='training from zero with FSM om obs.shape 42. Trying 6 lm and 3 lw. Collision range 0.5m. No rew_engaging_enemy, magnitude**2\n\n            # reward for closing the distance\n            self.rew_closing_distance = np.clip(\n                self.previous_distance[agent_id][target_id] - self.current_distance[agent_id][target_id],\n                a_min=-10.0,\n                a_max=None,\n            ) * 10\n            #* self.chasing[agent_id][target_id]\n\n\n            # reward for engaging the enemy\n            self.rew_engaging_enemy = np.divide(3.0, self.current_vel_angles[agent_id][target_id],\n                                           where=self.current_vel_angles[agent_id][target_id] != 0) * (\n                    self.chasing[agent_id][target_id]\n                    * self.approaching[agent_id][target_id]\n                    * 1.0\n                )\n\n            # # reward for progressing to engagement\n            self.rew_near_engagement = (\n                    (self.current_magnitude[agent_id]- self.past_magnitude[agent_id])**2\n                    * 100.0\n                    * self.in_range[agent_id][target_id]\n                    * self.approaching[agent_id][target_id]\n                    * self.chasing[agent_id][target_id]\n            )\n\n            # reward for maintaning linear velocities.\n            self.rew_speed_magnitude =(\n                    (self.current_magnitude[agent_id]**2)\n\n                    * self.approaching[agent_id][target_id]\n\n            )\n\n            self.rewards[agent_id] += (\n                    self.rew_closing_distance\n\n                    + self.rew_speed_magnitude\n\n            )\n'
__file__='C:\\projects\\pyflyt-kamikazes\\apps\\train.py'
model.start_datetime=2024-01-01 17:13:14.765703
elapsed_time=0:28:23.343128
model.num_timesteps=2162688
device=device(type='cuda')
seed=None
batch_size=512
model.learning_rate=0.001
nn_t=[256, 256, 256]
num_cpus=16
num_vec_envs=16
model.n_envs=96
model.n_steps=2048
model.n_epochs=10
model.batch_size=512
random_respawn=True
spawn_settings={'lw_center_bounds': 10.0, 'lm_center_bounds': 10.0, 'lw_spawn_radius': 1.0, 'lm_spawn_radius': 5, 'min_z': 1.0, 'seed': None, 'num_lw': 3, 'num_lm': 6}
completion_datetime=2024-01-01 17:41:38.108831
model.action_space=Box(-10.0, 10.0, (4,), float64)
model.observation_space=Box(-inf, inf, (42,), float64)
env_kwargs={'start_pos': array([[-0.91350449,  4.26642263,  2.47252731],
       [-0.9485845 ,  6.34121678,  1.47993875],
       [ 0.05781679,  2.17888709,  8.75616334],
       [ 0.03792721,  3.73656349,  1.43949517],
       [-1.99906986,  4.50892357,  1.6818983 ],
       [ 1.07108044,  0.1337152 ,  8.19074428],
       [-5.7666596 ,  0.48554672,  1.81369244],
       [-7.2666596 ,  1.35157212,  1.81369244],
       [-7.2666596 , -0.38047869,  1.81369244]]), 'start_orn': array([[ 0.71497357,  0.60320429,  3.57469825],
       [ 0.21458438, -0.46905932, -1.82306808],
       [-0.15100504, -0.63590879,  0.02221448],
       [-0.54146774,  0.92913547,  2.53376631],
       [-0.04824968,  0.95027741,  5.68055478],
       [-0.66893185,  0.23372336,  3.43543038],
       [ 0.        ,  0.        ,  0.        ],
       [ 0.        ,  0.        ,  0.        ],
       [ 0.        ,  0.        ,  0.        ]]), 'formation_center': [-6.766659597044001, 0.48554671839486474, 1.8136924423356835], 'flight_dome_size': 21.0, 'spawn_settings': {'lw_center_bounds': 10.0, 'lm_center_bounds': 10.0, 'lw_spawn_radius': 1.0, 'lm_spawn_radius': 5, 'min_z': 1.0, 'seed': None, 'num_lw': 3, 'num_lm': 6}, 'num_lm': 6, 'num_lw': 3}
model.policy_kwargs={'net_arch': {'pi': [256, 256, 256], 'vf': [256, 256, 256]}}
model.policy=ActorCriticPolicy(
  (features_extractor): FlattenExtractor(
    (flatten): Flatten(start_dim=1, end_dim=-1)
  )
  (pi_features_extractor): FlattenExtractor(
    (flatten): Flatten(start_dim=1, end_dim=-1)
  )
  (vf_features_extractor): FlattenExtractor(
    (flatten): Flatten(start_dim=1, end_dim=-1)
  )
  (mlp_extractor): MlpExtractor(
    (policy_net): Sequential(
      (0): Linear(in_features=42, out_features=256, bias=True)
      (1): Tanh()
      (2): Linear(in_features=256, out_features=256, bias=True)
      (3): Tanh()
      (4): Linear(in_features=256, out_features=256, bias=True)
      (5): Tanh()
    )
    (value_net): Sequential(
      (0): Linear(in_features=42, out_features=256, bias=True)
      (1): Tanh()
      (2): Linear(in_features=256, out_features=256, bias=True)
      (3): Tanh()
      (4): Linear(in_features=256, out_features=256, bias=True)
      (5): Tanh()
    )
  )
  (action_net): Linear(in_features=256, out_features=4, bias=True)
  (value_net): Linear(in_features=256, out_features=1, bias=True)
)
model.policy_aliases={'MlpPolicy': <class 'stable_baselines3.common.policies.ActorCriticPolicy'>, 'CnnPolicy': <class 'stable_baselines3.common.policies.ActorCriticCnnPolicy'>, 'MultiInputPolicy': <class 'stable_baselines3.common.policies.MultiInputActorCriticPolicy'>}
model.policy_class=<class 'stable_baselines3.common.policies.ActorCriticPolicy'>
