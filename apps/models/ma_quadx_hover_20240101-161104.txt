result: Drone moves slowing and not necessarily towards the target. The suspect is it was caused by the rew_engaging_enemy (see graphic)
train_desc='training from zero with FSM om obs.shape 42. Trying 6 lm and 3 lw. Collision range 0.5m\n\n                        # reward for closing the distance\n            self.rew_closing_distance = np.clip(\n                self.previous_distance[agent_id][target_id] - self.current_distance[agent_id][target_id],\n                a_min=-10.0,\n                a_max=None,\n            ) #* self.chasing[agent_id][target_id]\n\n\n            # reward for engaging the enemy\n            self.rew_engaging_enemy = np.divide(3.0, self.current_vel_angles[agent_id][target_id],\n                                           where=self.current_vel_angles[agent_id][target_id] != 0) * (\n                    self.chasing[agent_id][target_id]\n                    * self.approaching[agent_id][target_id]\n                    * 1.0\n                )\n\n            # # reward for progressing to engagement\n            self.rew_near_engagement = (\n                    (self.current_magnitude[agent_id]- self.past_magnitude[agent_id])**2\n                    * 100.0\n                    * self.in_range[agent_id][target_id]\n                    * self.approaching[agent_id][target_id]\n                    #* self.in_cone[agent_id][target_id]\n            )\n\n            # reward for maintaning linear velocities.\n            self.rew_speed_magnitude =(\n                    (self.current_magnitude[agent_id])\n                    #* self.chasing[agent_id][target_id]\n                    * self.approaching[agent_id][target_id]\n\n            )\n\n            self.rewards[agent_id] += (\n                    self.rew_closing_distance\n                    + self.rew_engaging_enemy\n                    + self.rew_speed_magnitude\n                    #+ self.rew_near_engagement\n            )\n\n'
__file__='C:\\projects\\pyflyt-kamikazes\\apps\\train.py'
model.start_datetime=2024-01-01 15:42:02.268422
elapsed_time=0:29:02.312999
model.num_timesteps=2162688
device=device(type='cuda')
seed=None
batch_size=512
model.learning_rate=0.001
nn_t=[256, 256, 256]
num_cpus=16
num_vec_envs=16
model.n_envs=96
model.n_steps=2048
model.n_epochs=10
model.batch_size=512
random_respawn=True
spawn_settings={'lw_center_bounds': 10.0, 'lm_center_bounds': 10.0, 'lw_spawn_radius': 1.0, 'lm_spawn_radius': 5, 'min_z': 1.0, 'seed': None, 'num_lw': 3, 'num_lm': 6}
completion_datetime=2024-01-01 16:11:04.581421
model.action_space=Box(-10.0, 10.0, (4,), float64)
model.observation_space=Box(-inf, inf, (42,), float64)
env_kwargs={'start_pos': array([[-2.45401176,  3.33777195,  4.93959153],
       [-2.88238622,  8.06301322,  3.62065654],
       [-0.63267983,  3.83749326,  2.49306842],
       [ 0.2613624 , 12.84104802,  4.83035828],
       [-1.82172934,  9.03577583,  5.43747738],
       [-6.5900871 ,  9.69079524,  3.7125072 ],
       [ 4.71457118, -5.97211696,  1.6699954 ],
       [ 3.21457118, -5.10609155,  1.6699954 ],
       [ 3.21457118, -6.83814236,  1.6699954 ]]), 'start_orn': array([[-0.42337183,  0.75895742, -0.22736431],
       [-0.6339941 , -0.7850868 , -3.26224427],
       [-0.91922168, -0.50516503, -3.85994958],
       [-0.6565902 , -0.39606925, -2.84206525],
       [ 0.6755589 ,  0.2611322 ,  3.41676612],
       [ 0.40715128,  0.34577133,  6.15803807],
       [ 0.        ,  0.        ,  0.        ],
       [ 0.        ,  0.        ,  0.        ],
       [ 0.        ,  0.        ,  0.        ]]), 'formation_center': [3.7145711779120827, -5.972116956078604, 1.6699953970820265], 'flight_dome_size': 21.0, 'spawn_settings': {'lw_center_bounds': 10.0, 'lm_center_bounds': 10.0, 'lw_spawn_radius': 1.0, 'lm_spawn_radius': 5, 'min_z': 1.0, 'seed': None, 'num_lw': 3, 'num_lm': 6}, 'num_lm': 6, 'num_lw': 3}
model.policy_kwargs={'net_arch': {'pi': [256, 256, 256], 'vf': [256, 256, 256]}}
model.policy=ActorCriticPolicy(
  (features_extractor): FlattenExtractor(
    (flatten): Flatten(start_dim=1, end_dim=-1)
  )
  (pi_features_extractor): FlattenExtractor(
    (flatten): Flatten(start_dim=1, end_dim=-1)
  )
  (vf_features_extractor): FlattenExtractor(
    (flatten): Flatten(start_dim=1, end_dim=-1)
  )
  (mlp_extractor): MlpExtractor(
    (policy_net): Sequential(
      (0): Linear(in_features=42, out_features=256, bias=True)
      (1): Tanh()
      (2): Linear(in_features=256, out_features=256, bias=True)
      (3): Tanh()
      (4): Linear(in_features=256, out_features=256, bias=True)
      (5): Tanh()
    )
    (value_net): Sequential(
      (0): Linear(in_features=42, out_features=256, bias=True)
      (1): Tanh()
      (2): Linear(in_features=256, out_features=256, bias=True)
      (3): Tanh()
      (4): Linear(in_features=256, out_features=256, bias=True)
      (5): Tanh()
    )
  )
  (action_net): Linear(in_features=256, out_features=4, bias=True)
  (value_net): Linear(in_features=256, out_features=1, bias=True)
)
model.policy_aliases={'MlpPolicy': <class 'stable_baselines3.common.policies.ActorCriticPolicy'>, 'CnnPolicy': <class 'stable_baselines3.common.policies.ActorCriticCnnPolicy'>, 'MultiInputPolicy': <class 'stable_baselines3.common.policies.MultiInputActorCriticPolicy'>}
model.policy_class=<class 'stable_baselines3.common.policies.ActorCriticPolicy'>
