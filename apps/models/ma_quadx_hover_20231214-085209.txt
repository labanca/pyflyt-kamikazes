random_respawn=True
__file__='C:\\projects\\pyflyt_parallel\\apps\\chaser\\train.py'
model.num_timesteps=50003968
device=device(type='cpu')
seed=None
model.start_datetime=2023-12-14 01:29:48.595212
completion_datetime=2023-12-14 08:52:09.666825
elapsed_time=7:22:21.071613
num_cpus=8
num_vec_envs=8
model.device=device(type='cpu')
model.learning_rate=7e-05
env_kwargs={'start_pos': array([[-2.89383436, -3.92843018,  3.5626418 ],
       [ 3.71081275, -4.73796793,  2.81056439]]), 'start_orn': array([[ 0.58926101,  0.85788033, -6.19187587],
       [-0.15767293,  0.54765918,  2.50977747]]), 'flight_dome_size': 15.588457268119896, 'uav_mapping': array(['lm', 'lw'], dtype='<U2'), 'spawn_settings': {'num_drones': 2, 'min_distance': 3.0, 'spawn_radius': 5.0, 'center': (0, 0, 0), 'seed': None}}
spawn_settings={'num_drones': 2, 'min_distance': 3.0, 'spawn_radius': 5.0, 'center': (0, 0, 0), 'seed': None}
model.policy_kwargs={'net_arch': {'pi': [128, 128, 128], 'vf': [128, 128, 128]}}
model.policy=ActorCriticPolicy(
  (features_extractor): FlattenExtractor(
    (flatten): Flatten(start_dim=1, end_dim=-1)
  )
  (pi_features_extractor): FlattenExtractor(
    (flatten): Flatten(start_dim=1, end_dim=-1)
  )
  (vf_features_extractor): FlattenExtractor(
    (flatten): Flatten(start_dim=1, end_dim=-1)
  )
  (mlp_extractor): MlpExtractor(
    (policy_net): Sequential(
      (0): Linear(in_features=33, out_features=128, bias=True)
      (1): Tanh()
      (2): Linear(in_features=128, out_features=128, bias=True)
      (3): Tanh()
      (4): Linear(in_features=128, out_features=128, bias=True)
      (5): Tanh()
    )
    (value_net): Sequential(
      (0): Linear(in_features=33, out_features=128, bias=True)
      (1): Tanh()
      (2): Linear(in_features=128, out_features=128, bias=True)
      (3): Tanh()
      (4): Linear(in_features=128, out_features=128, bias=True)
      (5): Tanh()
    )
  )
  (action_net): Linear(in_features=128, out_features=4, bias=True)
  (value_net): Linear(in_features=128, out_features=1, bias=True)
)
model.policy_aliases={'MlpPolicy': <class 'stable_baselines3.common.policies.ActorCriticPolicy'>, 'CnnPolicy': <class 'stable_baselines3.common.policies.ActorCriticCnnPolicy'>, 'MultiInputPolicy': <class 'stable_baselines3.common.policies.MultiInputActorCriticPolicy'>}
model.policy_class=<class 'stable_baselines3.common.policies.ActorCriticPolicy'>
model.n_envs=16
