train_desc=' Trying the same rewards of ma_quadx_hover_20231219-080504.zip, 1 LW, 1 LM, but now with a collission radius of 0.35 and also reducing spawn radius. See if larger n_steps solves the problems. Disabled return of agent_id if no near LW found.\n            self.approaching = self.current_distance < self.previous_distance\n\n            # reward for closing the distance\n            rew_closing_distance = np.clip(\n                self.previous_distance[agent_id][target_id] - self.current_distance[agent_id][target_id],\n                a_min=-10.0,\n                a_max=None,\n            ) * (\n                    self.chasing[agent_id][target_id] * 1.0\n                )\n\n            # reward for engaging the enemy\n            rew_engaging_enemy = 3.0 / (self.current_vel_angles[agent_id][target_id] + 0.1) * (\n                    self.chasing[agent_id][target_id]\n                    * self.approaching[agent_id][target_id]\n                    * 1.0\n            )\n\n            # reward for maintaning linear velocities.\n            rew_speed_magitude =(\n                    (1.0 * self.current_magnitude[agent_id]**2)\n                    * self.chasing[agent_id][target_id]\n                    * self.approaching[agent_id][target_id]\n            )\n            \n            self.rewards[agent_id] += (\n                    rew_closing_distance\n                    + rew_engaging_enemy\n                    #+ rew_near_engagement\n                    + rew_speed_magitude\n            )\n\n'
__file__='C:\\projects\\pyflyt-kamikazes\\apps\\train.py'
model.start_datetime=2023-12-21 14:03:37.844650
elapsed_time=0:44:23.061547
model.num_timesteps=1507328
device=device(type='cuda')
seed=None
batch_size=512
model.learning_rate=0.0001
nn_t=[128, 128, 128]
num_cpus=8
num_vec_envs=8
model.n_envs=8
random_respawn=True
spawn_settings={'num_drones': 2, 'min_distance': 2, 'spawn_radius': 5, 'center': (0, 0, 0), 'seed': None}
completion_datetime=2023-12-21 14:48:00.906197
env_kwargs={'num_lm': 1, 'start_pos': array([[ 0.20016126, -1.13974359,  2.67369645],
       [-3.49984383, -1.3457002 ,  1.76383592]]), 'start_orn': array([[-0.14530632, -0.20000173,  4.44430744],
       [ 0.        ,  0.        ,  0.        ]]), 'flight_dome_size': 15.588457268119896, 'spawn_settings': {'num_drones': 2, 'min_distance': 2, 'spawn_radius': 5, 'center': (0, 0, 0), 'seed': None}}
model.policy_kwargs={'net_arch': {'pi': [128, 128, 128], 'vf': [128, 128, 128]}}
model.policy=ActorCriticPolicy(
  (features_extractor): FlattenExtractor(
    (flatten): Flatten(start_dim=1, end_dim=-1)
  )
  (pi_features_extractor): FlattenExtractor(
    (flatten): Flatten(start_dim=1, end_dim=-1)
  )
  (vf_features_extractor): FlattenExtractor(
    (flatten): Flatten(start_dim=1, end_dim=-1)
  )
  (mlp_extractor): MlpExtractor(
    (policy_net): Sequential(
      (0): Linear(in_features=33, out_features=128, bias=True)
      (1): Tanh()
      (2): Linear(in_features=128, out_features=128, bias=True)
      (3): Tanh()
      (4): Linear(in_features=128, out_features=128, bias=True)
      (5): Tanh()
    )
    (value_net): Sequential(
      (0): Linear(in_features=33, out_features=128, bias=True)
      (1): Tanh()
      (2): Linear(in_features=128, out_features=128, bias=True)
      (3): Tanh()
      (4): Linear(in_features=128, out_features=128, bias=True)
      (5): Tanh()
    )
  )
  (action_net): Linear(in_features=128, out_features=4, bias=True)
  (value_net): Linear(in_features=128, out_features=1, bias=True)
)
model.policy_aliases={'MlpPolicy': <class 'stable_baselines3.common.policies.ActorCriticPolicy'>, 'CnnPolicy': <class 'stable_baselines3.common.policies.ActorCriticCnnPolicy'>, 'MultiInputPolicy': <class 'stable_baselines3.common.policies.MultiInputActorCriticPolicy'>}
model.policy_class=<class 'stable_baselines3.common.policies.ActorCriticPolicy'>
