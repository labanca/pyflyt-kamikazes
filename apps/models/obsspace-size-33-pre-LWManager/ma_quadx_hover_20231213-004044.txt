random_respawn=True
__file__='C:\\projects\\pyflyt_parallel\\apps\\chaser\\train.py'
model.num_timesteps=10027008
device=device(type='cpu')
seed=0
model.start_datetime=2023-12-12 23:02:18.788412
completion_datetime=2023-12-13 00:40:44.432871
elapsed_time=1:38:25.644459
num_cpus=8
num_vec_envs=8
model.device=device(type='cpu')
model.learning_rate=7e-05
env_kwargs={'start_pos': array([[ 2.25024917, -3.90828953,  6.32928916],
       [ 4.66244274, -2.4233609 ,  1.41792139]]), 'start_orn': array([[0., 0., 0.],
       [0., 0., 0.]]), 'flight_dome_size': 28.578838324886476, 'spawn_settings': {'num_drones': 2, 'min_distance': 2.0, 'spawn_radius': 10.0, 'center': (0, 0, 0)}, 'uav_mapping': array(['lm', 'lw'], dtype='<U2')}
spawn_settings={'num_drones': 2, 'min_distance': 2.0, 'spawn_radius': 10.0, 'center': (0, 0, 0)}
model.policy_kwargs={'net_arch': {'pi': [128, 128, 128], 'vf': [128, 128, 128]}}
model.policy=ActorCriticPolicy(
  (features_extractor): FlattenExtractor(
    (flatten): Flatten(start_dim=1, end_dim=-1)
  )
  (pi_features_extractor): FlattenExtractor(
    (flatten): Flatten(start_dim=1, end_dim=-1)
  )
  (vf_features_extractor): FlattenExtractor(
    (flatten): Flatten(start_dim=1, end_dim=-1)
  )
  (mlp_extractor): MlpExtractor(
    (policy_net): Sequential(
      (0): Linear(in_features=33, out_features=128, bias=True)
      (1): Tanh()
      (2): Linear(in_features=128, out_features=128, bias=True)
      (3): Tanh()
      (4): Linear(in_features=128, out_features=128, bias=True)
      (5): Tanh()
    )
    (value_net): Sequential(
      (0): Linear(in_features=33, out_features=128, bias=True)
      (1): Tanh()
      (2): Linear(in_features=128, out_features=128, bias=True)
      (3): Tanh()
      (4): Linear(in_features=128, out_features=128, bias=True)
      (5): Tanh()
    )
  )
  (action_net): Linear(in_features=128, out_features=4, bias=True)
  (value_net): Linear(in_features=128, out_features=1, bias=True)
)
model.policy_aliases={'MlpPolicy': <class 'stable_baselines3.common.policies.ActorCriticPolicy'>, 'CnnPolicy': <class 'stable_baselines3.common.policies.ActorCriticCnnPolicy'>, 'MultiInputPolicy': <class 'stable_baselines3.common.policies.MultiInputActorCriticPolicy'>}
model.policy_class=<class 'stable_baselines3.common.policies.ActorCriticPolicy'>
model.n_envs=16
