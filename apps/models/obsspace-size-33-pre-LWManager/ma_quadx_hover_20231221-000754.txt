train_desc=' Trying the same rewards of ma_quadx_hover_20231219-080504.zip, 4 LW, 4LM, but now with a collission radius of 0.4 and also reducing spawn radius.\n    rew_closing_distance = np.clip(\n    self.previous_distance[agent_id][target_id] - self.current_distance[agent_id][target_id],\n    a_min=-10.0,\n    a_max=None,\n    ) * (\n        self.chasing[agent_id][target_id] * 1.0\n        )\n\n# reward for engaging the enemy\nrew_engaging_enemy = 3.0 / (self.current_angles[agent_id][target_id]+ 0.1) * (\n    self.chasing[agent_id][target_id]\n    * self.approaching[agent_id][target_id]\n    * 1.0\n)\n\n# reward for progressing to engagement\nrew_progress_eng = (\n        (self.previous_vel_angles[agent_id][target_id] - self.current_vel_angles[agent_id][target_id])\n        * 10.0\n        * self.in_range[agent_id][target_id]\n        * self.approaching[agent_id][target_id]\n)\n'
__file__='C:\\projects\\pyflyt-kamikazes\\apps\\train.py'
model.start_datetime=2023-12-20 23:33:54.120864
elapsed_time=0:34:00.874585
model.num_timesteps=1048576
device=device(type='cpu')
seed=None
batch_size=512
model.learning_rate=0.0001
nn_t=[128, 128, 128]
num_cpus=8
num_vec_envs=8
model.n_envs=32
random_respawn=True
spawn_settings={'num_drones': 8, 'min_distance': 2, 'spawn_radius': 5, 'center': (0, 0, 0), 'seed': None}
completion_datetime=2023-12-21 00:07:54.995449
env_kwargs={'num_lm': 4, 'start_pos': array([[ 0.48382639,  0.24724115,  3.63973377],
       [ 3.19792496,  1.3204435 ,  4.98211577],
       [ 4.89504855, -4.30271285,  1.90541572],
       [ 3.88019999,  3.7869277 ,  1.78359452],
       [-4.09578064, -1.10022737,  2.95039177],
       [-2.33982378,  0.6731334 ,  4.83911685],
       [-3.85435994,  3.70473687,  4.09311826],
       [-2.99625821,  1.12707553,  2.38215128]]), 'start_orn': array([[-0.48953106,  0.89411678, -0.37974988],
       [ 0.67860229,  0.96588758,  1.24394314],
       [-0.46207402,  0.18687024, -2.47163657],
       [ 0.20770432,  0.75882463,  4.62081264],
       [ 0.        ,  0.        ,  0.        ],
       [ 0.        ,  0.        ,  0.        ],
       [ 0.        ,  0.        ,  0.        ],
       [ 0.        ,  0.        ,  0.        ]]), 'flight_dome_size': 15.588457268119896, 'spawn_settings': {'num_drones': 8, 'min_distance': 2, 'spawn_radius': 5, 'center': (0, 0, 0), 'seed': None}}
model.policy_kwargs={'net_arch': {'pi': [128, 128, 128], 'vf': [128, 128, 128]}}
model.policy=ActorCriticPolicy(
  (features_extractor): FlattenExtractor(
    (flatten): Flatten(start_dim=1, end_dim=-1)
  )
  (pi_features_extractor): FlattenExtractor(
    (flatten): Flatten(start_dim=1, end_dim=-1)
  )
  (vf_features_extractor): FlattenExtractor(
    (flatten): Flatten(start_dim=1, end_dim=-1)
  )
  (mlp_extractor): MlpExtractor(
    (policy_net): Sequential(
      (0): Linear(in_features=33, out_features=128, bias=True)
      (1): Tanh()
      (2): Linear(in_features=128, out_features=128, bias=True)
      (3): Tanh()
      (4): Linear(in_features=128, out_features=128, bias=True)
      (5): Tanh()
    )
    (value_net): Sequential(
      (0): Linear(in_features=33, out_features=128, bias=True)
      (1): Tanh()
      (2): Linear(in_features=128, out_features=128, bias=True)
      (3): Tanh()
      (4): Linear(in_features=128, out_features=128, bias=True)
      (5): Tanh()
    )
  )
  (action_net): Linear(in_features=128, out_features=4, bias=True)
  (value_net): Linear(in_features=128, out_features=1, bias=True)
)
model.policy_aliases={'MlpPolicy': <class 'stable_baselines3.common.policies.ActorCriticPolicy'>, 'CnnPolicy': <class 'stable_baselines3.common.policies.ActorCriticCnnPolicy'>, 'MultiInputPolicy': <class 'stable_baselines3.common.policies.MultiInputActorCriticPolicy'>}
model.policy_class=<class 'stable_baselines3.common.policies.ActorCriticPolicy'>
