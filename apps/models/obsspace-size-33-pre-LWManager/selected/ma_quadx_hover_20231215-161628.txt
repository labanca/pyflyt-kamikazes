result: go slowly to target. good. Lethal distance = 0.5
random_respawn=True
__file__='C:\\projects\\pyflyt-kamikazes\\apps\\train.py'
model.num_timesteps=1007616
device=device(type='cpu')
seed=None
model.start_datetime=2023-12-15 15:52:48.225733
completion_datetime=2023-12-15 16:16:28.259560
elapsed_time=0:23:40.033827
num_cpus=12
num_vec_envs=12
model.device=device(type='cpu')
model.learning_rate=0.0001
env_kwargs={'num_lm': 1, 'start_pos': array([[ 1.37417447,  0.14654004,  4.21705728],
       [ 4.4003374 , -3.2429055 ,  1.58280093]]), 'start_orn': array([[-0.8049758 ,  0.51659253, -2.94456442],
       [ 0.        ,  0.        ,  0.        ]]), 'flight_dome_size': 15.588457268119896, 'uav_mapping': array(['lm', 'lw'], dtype='<U2'), 'spawn_settings': {'num_drones': 2, 'min_distance': 3.0, 'spawn_radius': 5.0, 'center': (0, 0, 0), 'seed': None}}
spawn_settings={'num_drones': 2, 'min_distance': 3.0, 'spawn_radius': 5.0, 'center': (0, 0, 0), 'seed': None}
model.policy_kwargs={'net_arch': {'pi': [128, 128, 128], 'vf': [128, 128, 128]}}
model.policy=ActorCriticPolicy(
  (features_extractor): FlattenExtractor(
    (flatten): Flatten(start_dim=1, end_dim=-1)
  )
  (pi_features_extractor): FlattenExtractor(
    (flatten): Flatten(start_dim=1, end_dim=-1)
  )
  (vf_features_extractor): FlattenExtractor(
    (flatten): Flatten(start_dim=1, end_dim=-1)
  )
  (mlp_extractor): MlpExtractor(
    (policy_net): Sequential(
      (0): Linear(in_features=33, out_features=128, bias=True)
      (1): Tanh()
      (2): Linear(in_features=128, out_features=128, bias=True)
      (3): Tanh()
      (4): Linear(in_features=128, out_features=128, bias=True)
      (5): Tanh()
    )
    (value_net): Sequential(
      (0): Linear(in_features=33, out_features=128, bias=True)
      (1): Tanh()
      (2): Linear(in_features=128, out_features=128, bias=True)
      (3): Tanh()
      (4): Linear(in_features=128, out_features=128, bias=True)
      (5): Tanh()
    )
  )
  (action_net): Linear(in_features=128, out_features=4, bias=True)
  (value_net): Linear(in_features=128, out_features=1, bias=True)
)
model.policy_aliases={'MlpPolicy': <class 'stable_baselines3.common.policies.ActorCriticPolicy'>, 'CnnPolicy': <class 'stable_baselines3.common.policies.ActorCriticCnnPolicy'>, 'MultiInputPolicy': <class 'stable_baselines3.common.policies.MultiInputActorCriticPolicy'>}
model.policy_class=<class 'stable_baselines3.common.policies.ActorCriticPolicy'>
model.n_envs=12
