train_desc=' Include the explosion radius (0.5) in the reward computation to incentivize collission.\n                           self.rew_closing_distance[agent_id] = np.clip(\n                    self.previous_distance[agent_id][target_id] - self.current_distance[agent_id][target_id],\n                    a_min=-10.0,\n                    a_max=None,\n                ) #* self.chasing[agent_id][target_id]\n\n\n                exploding_distance = self.current_distance[agent_id][target_id] - 0.5\n\n                self.rew_close_to_target[agent_id] = 1 / (exploding_distance\n                                                if exploding_distance > 0\n                                                else 0.09)   #if the 1 is to hight the kamikazes will circle the enemy. try a\n            )\n'
__file__='C:\\projects\\pyflyt-kamikazes\\apps\\resume_train.py'
model.start_datetime=2024-01-07 05:07:37.191470
elapsed_time=0:12:07.226048
model.num_timesteps=36503552
lw_stand_still=True
device=device(type='cpu')
seed=None
batch_size=512
model.learning_rate=0.0001
discount_factor=0.98
nn_t=[128, 128, 128]
num_cpus=16
num_vec_envs=16
model.n_envs=48
model.n_steps=2048
model.n_epochs=10
model.batch_size=512
random_respawn=True
spawn_settings={'lw_center_bounds': 10.0, 'lw_spawn_radius': 1.0, 'lm_center_bounds': 5.0, 'lm_spawn_radius': 10.0, 'min_z': 1.0, 'seed': None, 'num_lw': 1, 'num_lm': 3}
completion_datetime=2024-01-07 05:19:44.417518
model.action_space=Box(-10.0, 10.0, (4,), float64)
model.observation_space=Box(-inf, inf, (40,), float64)
env_kwargs={'start_pos': array([[10.95977404, -7.62206578,  7.93530676],
       [ 8.59038793,  6.0570483 , 11.72808396],
       [ 8.89626283, -6.12352191,  8.68378112],
       [-6.61030554,  0.02777521,  5.80429377]]), 'start_orn': array([[ 0.04543693,  0.26214877,  5.01759055],
       [-0.19352139,  0.06994847, -5.49444801],
       [ 0.38411464, -0.47186921,  4.9808933 ],
       [ 0.        ,  0.        ,  0.        ]]), 'formation_center': [-7.610305538432063, 0.027775206000637098, 5.80429376775936], 'flight_dome_size': 39.0, 'spawn_settings': {'lw_center_bounds': 10.0, 'lw_spawn_radius': 1.0, 'lm_center_bounds': 5.0, 'lm_spawn_radius': 10.0, 'min_z': 1.0, 'seed': None, 'num_lw': 1, 'num_lm': 3}, 'num_lm': 3, 'num_lw': 1, 'max_duration_seconds': 12, 'reward_coef': 1.2, 'lw_stand_still': True, 'rew_exploding_target': 100}
model.policy_kwargs={'net_arch': {'pi': [128, 128, 128], 'vf': [128, 128, 128]}}
model.policy=ActorCriticPolicy(
  (features_extractor): FlattenExtractor(
    (flatten): Flatten(start_dim=1, end_dim=-1)
  )
  (pi_features_extractor): FlattenExtractor(
    (flatten): Flatten(start_dim=1, end_dim=-1)
  )
  (vf_features_extractor): FlattenExtractor(
    (flatten): Flatten(start_dim=1, end_dim=-1)
  )
  (mlp_extractor): MlpExtractor(
    (policy_net): Sequential(
      (0): Linear(in_features=40, out_features=128, bias=True)
      (1): Tanh()
      (2): Linear(in_features=128, out_features=128, bias=True)
      (3): Tanh()
      (4): Linear(in_features=128, out_features=128, bias=True)
      (5): Tanh()
    )
    (value_net): Sequential(
      (0): Linear(in_features=40, out_features=128, bias=True)
      (1): Tanh()
      (2): Linear(in_features=128, out_features=128, bias=True)
      (3): Tanh()
      (4): Linear(in_features=128, out_features=128, bias=True)
      (5): Tanh()
    )
  )
  (action_net): Linear(in_features=128, out_features=4, bias=True)
  (value_net): Linear(in_features=128, out_features=1, bias=True)
)
model.policy_aliases={'MlpPolicy': <class 'stable_baselines3.common.policies.ActorCriticPolicy'>, 'CnnPolicy': <class 'stable_baselines3.common.policies.ActorCriticCnnPolicy'>, 'MultiInputPolicy': <class 'stable_baselines3.common.policies.MultiInputActorCriticPolicy'>}
model.policy_class=<class 'stable_baselines3.common.policies.ActorCriticPolicy'>
